(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{387:function(e,a,n){"use strict";n.r(a);var t=n(39),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("之前做表单上传一直使用"),n("code",[e._v("input")]),e._v("标签完成，要么就是用过ajax传输base64编码，这次的需求把图片压缩过再传输，所以需要通过"),n("code",[e._v('input type="file"')]),e._v("获取到"),n("code",[e._v("file")]),e._v("对象后然后进行压缩处理再模拟"),n("code",[e._v("Form")]),e._v("提交文件。")]),e._v(" "),n("h4",{attrs:{id:"压缩图片"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#压缩图片"}},[e._v("#")]),e._v(" 压缩图片")]),e._v(" "),n("hr"),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("function zipImage(file, ratio) {\n    return new Promise((resolve, reject) => {\n    \n      var reader = new FileReader();\n      var img = new Image();\n\n      img.onload = function () {\n        // 通过canvas压缩图片\n        var canvas = document.createElement('canvas');\n        var context = canvas.getContext('2d');\n        canvas.width = img.naturalWidth * ratio;\n        canvas.height = img.naturalHeight * ratio;\n        context.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n        // 转换为文件格式\n        try {\n          canvas.toBlob((blob) => {\n            let result = new File([blob], file.name, { type: 'image/jpeg' })\n            resolve(result)\n          }, 'image/jpeg')\n        } catch (ex) {\n          reject(ex)\n        }\n      }\n\n      // 读文件成功的回调\n      reader.onload = function (e: any) {\n        // e.target.result就是图片的base64地址信息\n        img.src = e.target.result;\n      };\n\n      //  将图片读取为base64\n      reader.readAsDataURL(file);\n    })\n  }\n")])])]),n("p",[e._v("实际所谓的压缩就是就是借助"),n("code",[e._v("canvas")]),e._v("实现按比例缩放绘制，然后通过"),n("code",[e._v("canvas.toBlob")]),e._v("再转换回"),n("code",[e._v("File")]),e._v("对象。")]),e._v(" "),n("h4",{attrs:{id:"模拟表单发送文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#模拟表单发送文件"}},[e._v("#")]),e._v(" 模拟表单发送文件")]),e._v(" "),n("hr"),e._v(" "),n("p",[e._v("通过"),n("code",[e._v("axios")]),e._v("模拟表单，带上"),n("code",[e._v("file")]),e._v("就好了，记得在"),n("code",[e._v("headers")]),e._v("中设置"),n("code",[e._v("'Content-Type': 'multipart/form-data'")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("function upload(file, toZip) {\n\t// 压缩图片\n    if (toZip) {\n      file = await zipImage(file, 0.8)\n    }\n\t\n    // 创建表单\n    let formData = new FormData();\n    formData.append('file', file);\n\n    return axios({\n      url: uploadUrl,\n      method: 'post',\n      data: formData,\n      headers:  {\n      'Content-Type': 'multipart/form-data'\n     }\n    }).then((res) => { return res.data })\n  }\n")])])]),n("p",[e._v("这样就完成了模拟表单发送压缩过的图片的需求了。")])])}),[],!1,null,null,null);a.default=r.exports}}]);