(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{437:function(a,e,n){"use strict";n.r(e);var s=n(39),t=Object(s.a)({},(function(){var a=this,e=a.$createElement,n=a._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[a._v("#")]),a._v(" 运算符")]),a._v(" "),n("h2",{attrs:{id:"运算符优先级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运算符优先级"}},[a._v("#")]),a._v(" 运算符优先级")]),a._v(" "),n("p",[a._v("下面是运算符优先级表，从高到低：")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v(".\n[]\n!~+-\nis defined\n** * / %\n+ -\n... ..\n<= >= < >\nin\n== is != is not isnt\nis a \n&& and || or\n?:\n= := ?= += -= \nnot\nif unless\n")])])]),n("h2",{attrs:{id:"一元表达式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一元表达式"}},[a._v("#")]),a._v(" 一元表达式")]),a._v(" "),n("p",[a._v("下面是一些可用的一元运算符，"),n("code",[a._v("!")]),a._v(","),n("code",[a._v("not")]),a._v(","),n("code",[a._v("-")]),a._v(","),n("code",[a._v("+")]),a._v(",and"),n("code",[a._v("～")]),a._v("。")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("!0\n// => true\n\n!!0\n// => false\n\n!1\n// => false\n\n!!5px\n// => true\n\n-5px\n// => -5px\n\n--5px\n// => 5px\n\nnot true\n// => false\n\nnot not true\n// => true\n")])])]),a._v(" "),n("p",[a._v("逻辑符"),n("code",[a._v("not")]),a._v("的优先级较低，因此")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("a = 0\nb = 1\n\n!a and !b\n// => false\n//parsed as: (!a) and (!b)\n")])])]),n("p",[a._v("看下面")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("not a or b\n// => false\n// parse as :not (a or b)\n")])])]),n("p",[a._v("##　二元运算符")]),a._v(" "),n("p",[a._v("下标运算符允许我们去通过索引获取表达式内部值(从零开始)，负值可以从表达式中最后的元素开始。")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("list = 1 2 3 \nlist[0]\n// => 1\n\nlist[-1]\n// => 3\n")])])]),n("p",[a._v("括号表达式可以充当元组(例如"),n("code",[a._v("(15px,15px),(1,2,3)")]),a._v("):")]),a._v(" "),n("p",[a._v("下面这个例子是一个使用元组的错误处理(并展示结构的多功能)")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("add(a,b)\n    if a is a 'unit' and b is a 'unit'\n        a + b\n    else\n        (error 'a and b must be units!)\n\nbody\n    padding add(1,'5')\n    // => padding:error \"a and b must units\"\n\n    padding add(1,'5')[0]\n    // => padding:error;\n\n    padding add(1,'5')[0] == error\n    // => padding:true;\n\n    padding add(1,'5')[1]\n    // => padding:\"a and b must units\"\n")])])]),n("p",[a._v("这是一个更复杂的例子.现在我们执行内置函数"),n("code",[a._v("error()")]),a._v("，当标识符(传入的第一个值)等于"),n("code",[a._v("error")]),a._v("时返回错误信息。")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("if(val = add(1,'5'))[5] == error\n    error(val[1])\n")])])]),n("h2",{attrs:{id:"范围运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#范围运算符"}},[a._v("#")]),a._v(" 范围运算符 .. ...")]),a._v(" "),n("p",[a._v("同事提供这包括(开放)范围运算符("),n("code",[a._v("..")]),a._v(")和排除(闭合)范围运算符("),n("code",[a._v("...")]),a._v(")去扩展表达式:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("1..5\n// => 1 2 3 4 5\n\n1...5\n// => 1 2 3 4\n\n5..1\n// => 5 4 3 2 1\n")])])]),n("h2",{attrs:{id:"加减运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#加减运算符"}},[a._v("#")]),a._v(" 加减运算符: + -")]),a._v(" "),n("p",[a._v("二元加减运算符会在运算中将单位进行转换，或使用默认字面值。例如"),n("code",[a._v("5s-2px")]),a._v("结果是"),n("code",[a._v("3s")]),a._v("。")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('15px -5px\n// => 10px\n\n5-2\n// => 3 \n\n5in - 50mm\n// => 3.3031in\n\n5s - 1000ms\n// => 4s\n\n20mm + 5in\n// => 121.6in\n\n"foo " + "bar"\n// => "foo bar"\n\n"num " + 15\n// => "num 15"\n')])])]),n("h2",{attrs:{id:"乘法运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#乘法运算符"}},[a._v("#")]),a._v(" 乘法运算符: / * %")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("2000ms + (1s * 2)\n// => 4000ms\n\n5s/2\n// => 2.5s\n\n4%2\n// => 0\n")])])]),n("p",[a._v("当使用"),n("code",[a._v("/")]),a._v("在一个属性值中，你需要用括号包住它，否则"),n("code",[a._v("/")]),a._v("会按字面含义进行处理(支持CSS"),n("code",[a._v("line-height")]),a._v("):")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("font: 14px/1.5\n")])])]),n("p",[a._v("但是下面等同于"),n("code",[a._v("14px")]),a._v("÷ "),n("code",[a._v("1.5")]),a._v(":")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("font: (14px/1.5);\n")])])]),n("p",[a._v("这仅在"),n("code",[a._v("/")]),a._v("运算符时需要.")]),a._v(" "),n("h2",{attrs:{id:"指数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指数"}},[a._v("#")]),a._v(" 指数: **")]),a._v(" "),n("p",[a._v("下面是指数运算符:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("2 ** 8\n// => 256\n")])])]),n("h2",{attrs:{id:"相等和关系运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#相等和关系运算符"}},[a._v("#")]),a._v(" 相等和关系运算符 : == != >= <= ><")]),a._v(" "),n("p",[a._v("相等运算符可以用在等同的单位，颜色，字符串甚至标识符上。这是一个强大的概念，甚至任意的标识符(像"),n("code",[a._v("wahoo")]),a._v(")可以被当做原子使用。方法可能返回"),n("code",[a._v("yes")]),a._v("或"),n("code",[a._v("no")]),a._v("来代替"),n("code",[a._v("true")]),a._v("和"),n("code",[a._v("false")]),a._v("(但这是不建议的).")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("5 == 5\n// => true\n\n10 > 5\n// => true\n\n#fff == #fff\n// => true\n\ntrue == false\n// => false\n\nwahoo == yay\n// => false\n\nwahoo == wahoo\n// => true\n\n\"test\" == \"test\"\n// => true\n\ntrue is true\n// => true\n\n'hey' is not 'bye'\n// => true\n\n'hey' isnt 'bye'\n// => true\n\n(foo bar) == (foo bar)\n// => true\n\n(1 2 3) == (1 2 3)\n// => true\n\n(1 2 3) == (1 1 3)\n// => false\n")])])]),n("p",[a._v("只有精确地值才可以匹配.例如,"),n("code",[a._v("0 == false")]),a._v(" 和 "),n("code",[a._v("null = false")]),a._v(" 都是 "),n("code",[a._v("false")]),a._v(".")]),a._v(" "),n("p",[a._v("别名:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("== is\n!= is not\n!= isnt\n")])])]),n("h2",{attrs:{id:"真实性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#真实性"}},[a._v("#")]),a._v(" 真实性")]),a._v(" "),n("p",[a._v("在Stylus中几乎大多数都会被解析成"),n("code",[a._v("true")]),a._v(",包括单位后缀，甚至"),n("code",[a._v("0%")]),a._v(","),n("code",[a._v("0px")]),a._v(",等都将会被解析为"),n("code",[a._v("true")]),a._v("(因为这在Stylus的混合书写和函数中认为单位是有效的是很常见的)")]),a._v(" "),n("p",[a._v("然而,"),n("code",[a._v("0")]),a._v("本身在算数中就是"),n("code",[a._v("false")]),a._v("。")]),a._v(" "),n("p",[a._v("表达式(或者列表)长度大于1时，被认为是真。")]),a._v(" "),n("p",[n("code",[a._v("true")]),a._v("的例子:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("0%\n0px\n1px\n-1\n-1px\nhey\n'hey'\n(0 0 0)\n(\" \")\n")])])]),n("p",[n("code",[a._v("false")]),a._v("的例子:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("0\nnullfalser\n''\n")])])]),n("h2",{attrs:{id:"逻辑运算符-and-or"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符-and-or"}},[a._v("#")]),a._v(" 逻辑运算符: && || and or")]),a._v(" "),n("p",[a._v("逻辑运算符"),n("code",[a._v("&&")]),a._v("和"),n("code",[a._v("||")]),a._v("的别名是"),n("code",[a._v("and")]),a._v("和"),n("code",[a._v("or")]),a._v(",它们优先级相同.")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("5 && 3\n// => 3\n\n0 || 5\n// => 5\n\n0 && 5\n// => 0\n\n#fff is a 'rgba' and 15 is 'unit'\n// => true\n")])])]),n("h2",{attrs:{id:"存在运算符-in"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#存在运算符-in"}},[a._v("#")]),a._v(" 存在运算符: in")]),a._v(" "),n("p",[a._v("检查运算符左边的内容是否存在于运算符右边的表达式中.")]),a._v(" "),n("p",[a._v("简单的例子:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("nums = 1 2 3\n1 in nums\n// => true\n\n5 in nums\n// => false\n")])])]),n("p",[a._v("一些未定义的标识符:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("words = foo bar baz\nbar in words\n// => bar\n\nHEY in words\n// => false\n")])])]),n("p",[a._v("同样可以用在元组中:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("vals = (error 'one')(error 'two')\nerror in vals\n// => false\n\n(error 'one') in vals\n// => true\n\n(error 'two') in vals\n// => true\n\n(error 'something') in vals\n// => false\n")])])]),n("p",[a._v("在混合书写中的例子:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("pad(types = padding,n=5px)\n    if padding in types\n        padding n\n    if margin in types \n        margin n\n\nbody \n    pad()\n\nbody\n    pad(margin)\n\nbody\n    pad(padding margin,10px)\n")])])]),n("p",[a._v("解析为:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("body{\n    padding:5px;\n}\n\nbody{\n    margin:5px;\n}\nbody{\n    padding:10px;\n    margin:10px;\n}\n")])])]),n("h2",{attrs:{id:"条件赋值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#条件赋值"}},[a._v("#")]),a._v(" 条件赋值 ?= :=")]),a._v(" "),n("p",[a._v("条件赋值运算符"),n("code",[a._v("?=")]),a._v("（别名是"),n("code",[a._v(":=")]),a._v(")，让我们定义变量不需要去破坏原来的值(如果存在的话)。这个操作运算符可以扩展为三元中的一个"),n("code",[a._v("is defined")]),a._v("的二元操作。")]),a._v(" "),n("p",[a._v("例如,下面是相等的：")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("color:=white\ncolor?=white\ncolor = color is denfind ? color : white\n")])])]),n("p",[a._v("当使用"),n("code",[a._v("=")]),a._v("时，可以简单的赋值:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("color = white\ncolor = black\n\ncolor\n// => black\n")])])]),n("p",[a._v("但是当使用"),n("code",[a._v("?=")]),a._v("时，我们第二行就没有效果了(当变量已经被定义):")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("color = white\ncolor ?= black\n\ncolor\n// => black\n")])])]),n("h2",{attrs:{id:"实例检查-is-a"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实例检查-is-a"}},[a._v("#")]),a._v(" 实例检查: is a")]),a._v(" "),n("p",[a._v("Stylus提供一个二元操作符是"),n("code",[a._v("is a")]),a._v("用于类型检测。")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("15 is a 'unit'\n// => true\n\n#fff is a 'rgba'\n// => true\n\n15 is a `rgba'\n// => false\n")])])]),n("p",[a._v("或者我们可以使用内置函数"),n("code",[a._v("type()")])]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("type(#fff) == `rgba`\n// => true\n")])])]),n("p",[a._v("注意:"),n("code",[a._v("color")]),a._v("是唯一的特殊情况，运算符左侧是"),n("code",[a._v("RGBA")]),a._v("或"),n("code",[a._v("HSLA")]),a._v("时，他都为"),n("code",[a._v("true")]),a._v(".")]),a._v(" "),n("h2",{attrs:{id:"变量定义-is-defined"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#变量定义-is-defined"}},[a._v("#")]),a._v(" 变量定义: is defined")]),a._v(" "),n("p",[a._v("这个伪二元运算符不接收右边的运算符，也不通过左边进行求值，它允许我们检测变量是否被赋值。")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("foo is defined\n// => false\n\nfoo = 15px\nfoo is defined\n// => true\n\n#fff is deined\n// => 'invalid \"is defined\" check non-variable #fff'\n")])])]),n("p",[a._v("当然我们也可以使用"),n("code",[a._v("lookup(name)")]),a._v("内置函数去实现这个功能-进行动态查找")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("name = 'blue'\nlookup('light-' + name)\n// => null\n\nlight-blue = #80e2e9\nlookup('light-' + name)\n// => #80e2e9\n")])])]),n("p",[a._v("操作符是必要的，因为一个未定义的变量仍然会返回一个真值，例如：")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("body\n    if ohnoes\n        padding 5px\n")])])]),n("p",[a._v("当未定义时，将会将会产生下面的CSS:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("body{\n    padding:5px;\n}\n")])])]),n("p",[a._v("当然下面的是安全的:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("body\n    if ohnoes is defined\n        padding 5px\n")])])]),n("h2",{attrs:{id:"三元运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三元运算符"}},[a._v("#")]),a._v(" 三元运算符")]),a._v(" "),n("p",[a._v("三元运算符会运作的和其它大多数语言中期望的一样。他是唯一一个操作三个元素的运算符(条件表达式，真值表达式，假值表达式)")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("num = 15\nnum ? unit(num,'px'):20px\n// => 15px\n")])])]),n("h2",{attrs:{id:"强制转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#强制转换"}},[a._v("#")]),a._v(" 强制转换")]),a._v(" "),n("p",[a._v("作为一个简洁的方式，"),n("code",[a._v("(expr)")]),a._v("语法可以用来替代"),n("code",[a._v("unit")]),a._v("内置函数进行单位强制转换")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("body\n    n = 5\n    foo: (n)em\n    foo: (n)%\n    foo: (n+5)%\n    foo: (n*5)px\n    foo: unit(n+5,'%')\n    foo: unit(5+180/2,deg)\n")])])]),n("h2",{attrs:{id:"颜色运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#颜色运算符"}},[a._v("#")]),a._v(" 颜色运算符")]),a._v(" "),n("p",[a._v("可以有一个简洁的方式来操作颜色的组成，例如：我们可以对每个RGB值进行运算：")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("#0e0 + #0e0\n// => #0f0\n")])])]),n("p",[a._v("另一个例子是通过添加或减去一个百分比值，对亮度值进行调整，使之变亮或变暗：")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("#888 + 50%\n// => #c3c3c3\n\n#888 - 50%\n// => #444\n")])])]),n("p",[a._v("也可以通过添加或者减去一个度数单位(deg)来调整颜色的色调，例如，添加"),n("code",[a._v("50deg")]),a._v("来让这红色的值变成黄色:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("#f00 + 50deg\n// => #ffd500\n")])])]),n("p",[a._v("色值被适当的固定了。例如，我们"),n("code",[a._v("旋转")]),a._v("这色调180度，如果当前值是"),n("code",[a._v("320deg")]),a._v("，那么会变成"),n("code",[a._v("140deg")]),a._v("。")]),a._v(" "),n("p",[a._v("我们也可以一次调整多个值，使用"),n("code",[a._v("rgb()")]),a._v(","),n("code",[a._v("rgba()")]),a._v(","),n("code",[a._v("hsl()")]),a._v(","),n("code",[a._v("hsla()")]),a._v(":")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("#f00 - rgba(100,0,0,0.5)\n// => rgba(155,0,0,0.5)\n")])])]),n("h2",{attrs:{id:"格式化字符串"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#格式化字符串"}},[a._v("#")]),a._v(" 格式化字符串")]),a._v(" "),n("p",[a._v("字符串格式化运算符"),n("code",[a._v("%")]),a._v("可以用来生成字面量值，通过传递参数给内置函数"),n("code",[a._v("s()")]),a._v(":")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("`X::Microsoft::Crap(%s)` % #fc0\n// => X::Microsoft::Crap(#fc0)\n")])])]),n("p",[a._v("多个值需要括号括起来:")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("'-webkit-gradident(%s,%s,%s)' % (linear (0,0)(0 100%))\n// => -webkit-gradient(liner,0 0,0 100%)\n")])])])])}),[],!1,null,null,null);e.default=t.exports}}]);