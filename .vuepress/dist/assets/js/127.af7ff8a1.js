(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{444:function(e,t,a){"use strict";a.r(t);var s=a(39),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("相比于HTML的横空出世和Javascript的一锤定音，CSS的出现就要漫长的多。")]),e._v(" "),a("p",[e._v("时间回到1991年，当时伯纳斯-李开发HTML的时候忘记了一个东西，那就是他没有提供给网页写样式的方法，而这个网页是什么样式完全由浏览器来决定，而CSS直到五年后才出现，十年后才完全的实现，这导致当时多种网页样式的实现方案在互相的竞争，尽管这些竞争方案最终没有使用起来，但是这并不方案我们去重新看看那他们当时的方案。")]),e._v(" "),a("p",[e._v("1993年初，那个时候Mosaic还没有发布1.0版本，当时浏览器还在研究的是应该怎么处理HTML，样式的实现完全是交给浏览器开发者按照喜好渲染，这个时候"),a("code",[e._v("Robert Raisch")]),e._v("提出过一个样式提案，命名为RRP。")]),e._v(" "),a("p",[e._v("RRP:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("@BODY fo(fa=he,si=18)\n")])])]),a("p",[e._v("CSS:")]),e._v(" "),a("div",{staticClass:"language-CSS extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[e._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v("font-faimily")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("helvetica\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("18px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("不得不说在那个网速只有14.4k而且没有gzip的时代，尽量压缩格式还是非常合理的。当时的样式表是要求在终端浏览器和图形浏览器都可以工作。很超前的是RRP当时设计了列布局的模式，这个是在CSS在2011年才引用的功能。RRP当时设计的是一个文档只能有 一个样式表，这个今天看来就比较奇怪了。")]),e._v(" "),a("p",[e._v("马克·安德森知道RRP这个提案，但是他在他开发的Mosaic中并没有实现这个提案，而使用了HTML标签的方式来实现样式，如"),a("code",[e._v("<FONT>")]),e._v(","),a("code",[e._v("<CENTER>")]),e._v(",他当时的看法是为什么我要学习一种语言来开发文档，而学习另一种语言来把文档变成你想要的样子,从今天的角度来看，他当时确实是错了。")]),e._v(" "),a("p",[a("code",[e._v("Mosaic")]),e._v("其实并不是第一款图形界面的浏览器，"),a("code",[e._v("ViolaWWW")]),e._v("才是，这个是魏培源花了4天时间开发出来了，相比安德森花了6周开发的"),a("code",[e._v("Mosaic")]),e._v("他更加高效，他当时也创建了一个样式表语言PWP，并且支持嵌套结构。")]),e._v(" "),a("p",[e._v("PWP")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("(BODY fontSize=normal\n      BGColor=white\n      FGColor=black\n  (H1   fontSize=largest\n        BGColor=red\n        FGColor=white)\n)\n")])])]),a("p",[e._v("CSS")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("body{\n  font-size:normal;\n  background-color:white;\n  color:black;\n}\n\nbody h1{\n  font-size:large;\n  background-color:red;\n  color:white;\n}\n")])])]),a("p",[e._v("可以看出PWP不仅风格简洁，并且是使用了类似"),a("code",[e._v("Stylus")]),e._v("和"),a("code",[e._v("SASS")]),e._v("的嵌套和缩进，避免了重复选择器来表示层级,这已经是很超前的设计。而且PWP还是外联样式的提出者:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<LINK REL="STYLE" HREF="URL_to_a_stylesheet">\n')])])]),a("p",[e._v("只能说666,可惜的是"),a("code",[e._v("ViolaWWW")]),e._v("只能在"),a("code",[e._v("X Window System")]),e._v("下工作，当"),a("code",[e._v("Mosaic")]),e._v("移植到了Windows后,"),a("code",[e._v("ViolaWWW")]),e._v("也就消失了。")]),e._v(" "),a("p",[e._v("在HTML出现之前其实已经有类似的东西,SGML(标准通用标记语言)和HTML比较像，准确的说是HTML是派生自他，而另一种派生自SGML的语言叫做XML, XML产生的目的就是为了简化SGML。1987年美国国防部就成立一个名字为CALS(持续采办与全寿命支持计划)的小组，他们创造一个一门语言叫做FOSI来为SGML定义文档样式，")]),e._v(" "),a("p",[e._v("1993年就在魏培源给出提案的第四天，CALS提出了FOSI的一个变体来定义web样式。但是他并没有重新发明语言，因为FOSI就是直接用SGML书写的。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<outspec>\n  <docdesc>\n    <charlist>\n      <font size="12pt" bckcol="white" fontcol="black">\n    </charlist>\n  </docdesc>\n  <e-i-c gi="h1">\\<font size="24pt" bckcol="red", fontcol="white"\\></e-i-c>\n  <e-i-c gi="h2">\\<font size="20pt" bckcol="red", fgcol="white"\\></e-i-c>\n  <e-i-c gi="a"><font fgcol="red"></e-i-c>\n  <e-i-c gi="cmd kbd screen listing example"><font style="monoser"></e-i-c>\n</outspec>\n')])])]),a("p",[e._v("这段代码也就不翻译成对应的CSS了，因为你很难搞清楚docdesc和charlist是什么，而且当时接受提案的www-talk小组成员也搞不清，只能说明的是"),a("code",[e._v("e-i-c")]),e._v("代表的是element-in-context。\n但是FOSI值得骄傲的事情是他们引入了em字体单位，这个已经被CSS开发者所熟悉。")]),e._v(" "),a("p",[e._v("另一个提案是DSSSL，这个是一个基于函数式语言Scheme创建的一门新语言，整理写法也很简洁，功能超级强大。我们来看一看他的功能。")]),e._v(" "),a("p",[e._v("定义样式:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("(element H1\n  (make paragraph\n    font-size: 14pt\n    font-weight: 'bold))\n")])])]),a("p",[e._v("定义函数:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("(define (create-heading heading-font-size)\n  (make paragraph\n    font-size: heading-font-size\n    font-weight: 'bold))\n\n(element h1 (create-heading 24pt))\n(element h2 (create-heading 18pt))\n")])])]),a("p",[e._v("样式中使用计算，比如定义一个黑白相间的表格：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("(element TR\n  (if (= (modulo (child-number) 2)\n        0)\n    …   ;even-row\n    …)) ;odd-row\n")])])]),a("p",[e._v("而且可以把继承的属性值作为变量，在上面进行计算:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("(element H1\n  (make paragraph\n    font-size: (+ 4pt (inherited-font-size))))\n")])])]),a("p",[e._v("它的强大显而易见，但是它也继承了Scheme的缺点-括号太多，而且因为它语言上复杂让开发者望而却步，它在标准中包括了超过210项的独立样式。")]),e._v(" "),a("p",[e._v("PSL提案也值得一提，他有和CSS很像的基础语法")]),e._v(" "),a("p",[e._v("PSL")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("H1 {\n  fontSize: 20;\n}\n")])])]),a("p",[e._v("但是它的可扩展性以及功能性要比CSS丰富的多")]),e._v(" "),a("p",[e._v("获取浏览器真实尺寸")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("LI {\n  VertPos: Top = LeftSib . Actual Bottom;\n}\n")])])]),a("p",[e._v("支持逻辑表达式")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('A {\n  if (getAttribute(self, "href") != "") then\n    fgColor = "blue";\n    underlineNumber = 1;\n  endif\n}\n')])])]),a("p",[e._v("可以扩展很多想做的事情")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("LI {\n  if (ChildNum(Self) == round(NumChildren(Parent) / 2 + 1)) then\n    VertPos: Top = Parent.Top;\n    HorizPos: Left = LeftSib.Left + Self.Width;\n  else\n    VertPos: Top = LeftSib.Actual Bottom;\n    HorizPos: Left = LeftSib.Left;\n  endif\n}\n")])])]),a("p",[e._v("遗憾的是这种扩展性让人望而生畏。")]),e._v(" "),a("p",[e._v("说了这么提案，该说说CSS的前身了，1994年"),a("code",[e._v("Håkon W Lie")]),e._v("提出了CHSS")]),e._v(" "),a("p",[e._v("CHSS")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("h1.font.size = 24pt 100%\nh2.font.size = 20pt 40%\n")])])]),a("p",[e._v("这个行尾的百分比表示的是权重，假如之前定义的h2的大小为30pt，权重60%，那么加上这个样式表的24pt的40%,那么h2就应该是26pt。好吧，这个确实挺着有些科幻,但是它的一个思想影响到了之后的CSS，那就是样式表是可以叠加的，一个页面可以被允许有多个样式表。")]),e._v(" "),a("p",[e._v("1996年"),a("code",[e._v("Håkon Lie")]),e._v("与"),a("code",[e._v("Bert Bos")]),e._v("合作，他们之前都有提交过样式表的提案，这个合作让他们一起设计了一个名为CSS的样式表天，在11月份发布了CSS规范的第一版，最终他把CSS的诞生写入了自己的博士论文中。")]),e._v(" "),a("p",[e._v("CSS相比其他提案的最大优势就是简单，易于阅读和编写，这再一次印证里一些历史的规律，很多最后取胜的技术并不是面向那些专家的，而是面向技术入门的初学者。")]),e._v(" "),a("p",[e._v("不过CSS的诞生对于浏览器依然是新生事物，浏览器需要重新设计解析器也可以完全支持CSS，1997年以前基本上CSS无法使用，大概到2000左右才有浏览器完全支持了它，但是大概在2010年之后才做到了与标准完全一致，这大概用去了15年的时间。")]),e._v(" "),a("p",[e._v("在浏览器大战期间，IE3在发布时开始支持CSS，但还是很糟糕，网景公司决定在Netscape 4上支持CSS，但是它的方案是将CSS转化为Javascript执行，命名为JSSS。当时很多开发者要么不使用CSS，要么就需要为IE和Netscape单独写两套样式表，可见当时浏览器对CSS支持之差。直到Netscape 6的时候Netscape也放弃了对JSSS的支持。")]),e._v(" "),a("p",[e._v("2000年IE 5.5 发布，才宣布着对CSS1的大部分支持。")])])}),[],!1,null,null,null);t.default=n.exports}}]);