(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{381:function(e,t,s){"use strict";s.r(t);var a=s(39),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("之前的订单交易都是以单一币种之间的交换为例，如用户A使用TokenA换取用户B的TokenB，但是0x还支持多币种资产的交易，如用户A使用TokenA和TokenC换取用户B的TokenB。")]),e._v(" "),s("p",[e._v("在"),s("code",[e._v("fill_order_multi_asset")]),e._v("场景中就介绍了这种方式，当单一币种交易生成"),s("code",[e._v("AssetData")]),e._v("时，是通过"),s("code",[e._v("encodeERC20AssetData")]),e._v("传入对应的代币地址，需要多币种交易时，使用"),s("code",[e._v("encodeMultiAssetData")]),e._v("来传入多个币种信息即可。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    // 通过encodeMultiAssetData可以打包多种数据资产\n    // 指定对应的交易金额，和代币\n   const makerAssetData = assetDataUtils.encodeMultiAssetData(\n        [makerAssetAmount, erc20AssetAmount],\n        [erc721AssetData, erc20AssetData],\n    );\n")])])]),e._v(" "),s("p",[e._v("在创建订单时，makerAssetAmount只需要按其中一种资产金额输入即可。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    // the amount the maker is selling of maker asset (1 set of ERC721 Token and ERC20 tokens)\n    // when set to 1, this order cannot be partially filled.\n    // ERC721:1   ERC20:0.2\n    const makerAssetAmount = new BigNumber(1);\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);