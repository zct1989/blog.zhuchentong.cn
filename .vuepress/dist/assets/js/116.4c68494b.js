(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{433:function(e,r,t){"use strict";t.r(r);var n=t(39),o=Object(n.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("开发中出现的一个场景，当token过期时需要更新token进行重试，刚好看到"),t("code",[e._v("rxjs")]),e._v("的"),t("code",[e._v("retryWhen")]),e._v(",还是满足这个场景。")]),e._v(" "),t("p",[e._v("可以基于所有请求添加"),t("code",[e._v("retryWhen")]),e._v(",当该请求错误原因是token过期引起时进行重试即可。")]),e._v(" "),t("p",[t("code",[e._v("retryWhen")]),e._v("要求传入一个"),t("code",[e._v("Observable<T> => Observable<T>")]),e._v(" 函数，返回的"),t("code",[e._v("Observable")]),e._v("决定了是否进行重试，如果执行"),t("code",[e._v("observer.error")]),e._v("则会终止重试,负责则会进行重试。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 通讯异常重试\n      retryWhen(errors =>\n        Observable.create(observer => {\n          errors.pipe(catchError(observer.error)).subscribe(error => \n            if (需要重试) {\n          \t\t执行异步操作,更新TOKEN进行重试\n                observer.complete()\n            } else {\n              // 恢复异常状态\n              observer.error(error)\n            }\n          })\n        })\n      )\n")])])]),t("p",[e._v("这样就可以很友好的进行通讯重试，去更新过期的token了。")])])}),[],!1,null,null,null);r.default=o.exports}}]);